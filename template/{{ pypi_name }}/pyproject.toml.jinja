[tool.poetry]
name = "{{ pypi_name }}"
description = "{{ project_description }}"
authors = ["{{ author }}{% if email|length != 0 %} <{{ email }}>{% endif %}"]
version = "0.1.0"
packages = [{ include = "{{ module_name }}" }]

readme = "README.md"
license = "GPL-3.0-or-later"

classifiers = [
    # Get the list of trove classifiers here: https://pypi.org/classifiers/
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]{% if add_docs %}
documentation = "https://{{ module_name.replace('_', '') }}.readthedocs.io/en/latest/index.html"{% endif %}
homepage = "https://github.com/{{ username }}/{{ pypi_name }}"
# keywords = ["awesome", "project"]  # Maximum of 5 keywords

[tool.poetry.dependencies]
python = "^3.8"{% if is_app %}

[tool.poetry.scripts]
{{ module_name }} = "{{ module_name }}.__main__:main"
{% endif %}

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
hypothesis = "^6.68.2"
mypy = "^1.0.1"
pytest = "^7.2.1"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
pylint = "^3.0.3"
shed = "^0.10.9"
{% if add_docs %}
Sphinx = "^6.1.3"{% endif %}
toml = "^0.10.2"

[tool.poe.tasks]
# Code linting
mypy = { cmd = "mypy src --strict", help = "Run MyPy on codebase" }
pylint = { cmd = "pylint src", help = "Run pylint on codebase" }
check_black = { cmd = "black src --check" }
check_imports = { cmd = "isort --check-only --profile=black src" }
lint = ["check_black", "check_imports", "pylint"]

[tool.poe.tasks.format]
shell = "shed"
help = "Format code"

[tool.poe.tasks.test]
cmd = "pytest -vvv --cov=src"
help = "Simply run test suite"

{% if add_docs %}
    [tool.poe.tasks.docs]
    cmd = "sphinx-build docs build"
    help = "Build documentation"{% endif %}


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.messages_control]
disable = [
    "arguments-differ",
    "attribute-defined-outside-init",
    "blacklisted-name",
    "duplicate-code",
    "fixme",
    "import-error",
    "no-member",
    "no-name-in-module",
    "protected-access",
    "stop-iteration-return",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-return-statements",
    "too-many-statements",
    "abstract-method",
    "chained-comparison",
    "eval-used",
    "exec-used",
    "expression-not-assigned",
    "global-statement",
    "missing-docstring",
    "missing-function-docstring",
    "redefined-argument-from-local",
    "redefined-outer-name",
    "reimported",
    "too-many-ancestors",
    "unexpected-special-method-signature",
    "consider-using-from-import",
    "try-except-raise"
]


